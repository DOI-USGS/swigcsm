language: generic

os: 
  - linux
  - osx

env:
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6
  - PYTHON_VERSION=3.7

before_install:
  # Install a supported cmake version (>= 3.10)
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh  https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Set up the env
  - conda create -q -n test -y python=$PYTHON_VERSION
  - source activate test

  # Add the necessary channels
  - conda config --add channels usgs-astrogeology
  - conda config --add channels conda-forge

install:
# Setup to do the build 
  - conda env update -n test -f environment.yml
  - conda install -y gcc_linux-64

script:
  - mkdir build && cd build
  - CC=$(which gcc) CXX=$(which c++) cmake .. && make
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      pytest python/tests/ --lib fixture/libfixturecsm.so;
    else
      pytest python/tests/ --lib fixture/libfixturecsm.dylib;
    fi
    
after_success:
  - source deactivate
  - conda install -y -q conda-build anaconda-client
  - if [ "${TRAVIS_PULL_REQUEST}" = "false" ] ;then
      conda build --token $CONDA_UPLOAD_TOKEN recipe -q;
    else
      conda build recipe -q;
    fi
